{
  "service": {
    "service": "sorting",
    "serviceObject": {
      "name": "sorting"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)*]+?)}",
      "name": "aws",
      "runtime": "nodejs10.x",
      "role": "arn:aws:iam::235233969742:role/service-role/Lambda-ExecutionRole-Student",
      "region": "us-east-1",
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "GetAllProjectsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/sorting-dev-getAllProjects"
            }
          },
          "PostProjectLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/sorting-dev-postProject"
            }
          },
          "GetAllPeopleLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/sorting-dev-getAllPeople"
            }
          },
          "GetRolesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/sorting-dev-getRoles"
            }
          },
          "PopulatePeopleLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/sorting-dev-populatePeople"
            }
          },
          "ProjectRolesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/sorting-dev-projectRoles"
            }
          },
          "InputStudentsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/sorting-dev-inputStudents"
            }
          },
          "GetAllProjectsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/sorting/dev/1571074276899-2019-10-14T17:31:16.899Z/sorting.zip"
              },
              "FunctionName": "sorting-dev-getAllProjects",
              "Handler": "handler.getAllProjects",
              "MemorySize": 1024,
              "Role": "arn:aws:iam::235233969742:role/service-role/Lambda-ExecutionRole-Student",
              "Runtime": "nodejs10.x",
              "Timeout": 6
            },
            "DependsOn": [
              "GetAllProjectsLogGroup"
            ]
          },
          "GetAllProjectsLambdaVersionXHNTJ9WswvDehlid01K8Znj3UcwxHWMtjGZIyTIbJk4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetAllProjectsLambdaFunction"
              },
              "CodeSha256": "wjJJ+AWyHDdK1zN5CZZjP66n10nzqwhRu16JZPg4yGk="
            }
          },
          "PostProjectLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/sorting/dev/1571074276899-2019-10-14T17:31:16.899Z/sorting.zip"
              },
              "FunctionName": "sorting-dev-postProject",
              "Handler": "handler.postProject",
              "MemorySize": 1024,
              "Role": "arn:aws:iam::235233969742:role/service-role/Lambda-ExecutionRole-Student",
              "Runtime": "nodejs10.x",
              "Timeout": 6
            },
            "DependsOn": [
              "PostProjectLogGroup"
            ]
          },
          "PostProjectLambdaVersionalPWDdBvPVOYhs8ZqqG9mFo93Umnpi7fX8hBBQudLU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PostProjectLambdaFunction"
              },
              "CodeSha256": "wjJJ+AWyHDdK1zN5CZZjP66n10nzqwhRu16JZPg4yGk="
            }
          },
          "GetAllPeopleLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/sorting/dev/1571074276899-2019-10-14T17:31:16.899Z/sorting.zip"
              },
              "FunctionName": "sorting-dev-getAllPeople",
              "Handler": "handler.getAllPeople",
              "MemorySize": 1024,
              "Role": "arn:aws:iam::235233969742:role/service-role/Lambda-ExecutionRole-Student",
              "Runtime": "nodejs10.x",
              "Timeout": 6
            },
            "DependsOn": [
              "GetAllPeopleLogGroup"
            ]
          },
          "GetAllPeopleLambdaVersionpwh112dm1c7vX5dYnqrIj5biadhlPQIrdAmMJ6LP8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetAllPeopleLambdaFunction"
              },
              "CodeSha256": "wjJJ+AWyHDdK1zN5CZZjP66n10nzqwhRu16JZPg4yGk="
            }
          },
          "GetRolesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/sorting/dev/1571074276899-2019-10-14T17:31:16.899Z/sorting.zip"
              },
              "FunctionName": "sorting-dev-getRoles",
              "Handler": "handler.getRoles",
              "MemorySize": 1024,
              "Role": "arn:aws:iam::235233969742:role/service-role/Lambda-ExecutionRole-Student",
              "Runtime": "nodejs10.x",
              "Timeout": 6
            },
            "DependsOn": [
              "GetRolesLogGroup"
            ]
          },
          "GetRolesLambdaVersion54YJnzHdB1zYOYbvU3PRm5kugxWgajS6yLKaqttbgc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetRolesLambdaFunction"
              },
              "CodeSha256": "wjJJ+AWyHDdK1zN5CZZjP66n10nzqwhRu16JZPg4yGk="
            }
          },
          "PopulatePeopleLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/sorting/dev/1571074276899-2019-10-14T17:31:16.899Z/sorting.zip"
              },
              "FunctionName": "sorting-dev-populatePeople",
              "Handler": "handler.populatePeople",
              "MemorySize": 1024,
              "Role": "arn:aws:iam::235233969742:role/service-role/Lambda-ExecutionRole-Student",
              "Runtime": "nodejs10.x",
              "Timeout": 6
            },
            "DependsOn": [
              "PopulatePeopleLogGroup"
            ]
          },
          "PopulatePeopleLambdaVersionOeD3J2DHkuvM6uKfhZVh3V9aGDLr5CXgx4zaCw99nqs": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PopulatePeopleLambdaFunction"
              },
              "CodeSha256": "wjJJ+AWyHDdK1zN5CZZjP66n10nzqwhRu16JZPg4yGk="
            }
          },
          "ProjectRolesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/sorting/dev/1571074276899-2019-10-14T17:31:16.899Z/sorting.zip"
              },
              "FunctionName": "sorting-dev-projectRoles",
              "Handler": "handler.projectRoles",
              "MemorySize": 1024,
              "Role": "arn:aws:iam::235233969742:role/service-role/Lambda-ExecutionRole-Student",
              "Runtime": "nodejs10.x",
              "Timeout": 6
            },
            "DependsOn": [
              "ProjectRolesLogGroup"
            ]
          },
          "ProjectRolesLambdaVersion7r15nqX3PmsaaEbVYYyxxdtHYzpoaiKoX509bzezPfU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ProjectRolesLambdaFunction"
              },
              "CodeSha256": "wjJJ+AWyHDdK1zN5CZZjP66n10nzqwhRu16JZPg4yGk="
            }
          },
          "InputStudentsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/sorting/dev/1571074276899-2019-10-14T17:31:16.899Z/sorting.zip"
              },
              "FunctionName": "sorting-dev-inputStudents",
              "Handler": "handler.inputStudents",
              "MemorySize": 1024,
              "Role": "arn:aws:iam::235233969742:role/service-role/Lambda-ExecutionRole-Student",
              "Runtime": "nodejs10.x",
              "Timeout": 6
            },
            "DependsOn": [
              "InputStudentsLogGroup"
            ]
          },
          "InputStudentsLambdaVersion6EcotXuPJ4fKRFLOZZZK1PyLdJAkITwNANjGBFuQUs": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "InputStudentsLambdaFunction"
              },
              "CodeSha256": "wjJJ+AWyHDdK1zN5CZZjP66n10nzqwhRu16JZPg4yGk="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-sorting",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              }
            }
          },
          "ApiGatewayResourceGetallprojects": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "getallprojects",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceProjects": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "projects",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceProjectsCreate": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceProjects"
              },
              "PathPart": "create",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePeople": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "people",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceRoles": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "roles",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePopulatepeople": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "populatepeople",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceProjectroles": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "projectroles",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceInputstudents": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "inputstudents",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodGetallprojectsGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceGetallprojects"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetAllProjectsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodProjectsCreatePost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProjectsCreate"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PostProjectLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodPeopleGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePeople"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetAllPeopleLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodRolesGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceRoles"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetRolesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodPopulatepeopleGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePopulatepeople"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PopulatePeopleLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodProjectrolesGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProjectroles"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ProjectRolesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodInputstudentsGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceInputstudents"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "InputStudentsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1571074248465": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodGetallprojectsGet",
              "ApiGatewayMethodProjectsCreatePost",
              "ApiGatewayMethodPeopleGet",
              "ApiGatewayMethodRolesGet",
              "ApiGatewayMethodPopulatepeopleGet",
              "ApiGatewayMethodProjectrolesGet",
              "ApiGatewayMethodInputstudentsGet"
            ]
          },
          "GetAllProjectsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetAllProjectsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PostProjectLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PostProjectLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetAllPeopleLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetAllPeopleLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetRolesLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetRolesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PopulatePeopleLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PopulatePeopleLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ProjectRolesLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ProjectRolesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "InputStudentsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "InputStudentsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "GetAllProjectsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetAllProjectsLambdaVersionXHNTJ9WswvDehlid01K8Znj3UcwxHWMtjGZIyTIbJk4"
            }
          },
          "PostProjectLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PostProjectLambdaVersionalPWDdBvPVOYhs8ZqqG9mFo93Umnpi7fX8hBBQudLU"
            }
          },
          "GetAllPeopleLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetAllPeopleLambdaVersionpwh112dm1c7vX5dYnqrIj5biadhlPQIrdAmMJ6LP8"
            }
          },
          "GetRolesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetRolesLambdaVersion54YJnzHdB1zYOYbvU3PRm5kugxWgajS6yLKaqttbgc"
            }
          },
          "PopulatePeopleLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PopulatePeopleLambdaVersionOeD3J2DHkuvM6uKfhZVh3V9aGDLr5CXgx4zaCw99nqs"
            }
          },
          "ProjectRolesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ProjectRolesLambdaVersion7r15nqX3PmsaaEbVYYyxxdtHYzpoaiKoX509bzezPfU"
            }
          },
          "InputStudentsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "InputStudentsLambdaVersion6EcotXuPJ4fKRFLOZZZK1PyLdJAkITwNANjGBFuQUs"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "getAllProjects": {
        "handler": "handler.getAllProjects",
        "events": [
          {
            "http": {
              "path": "getallprojects",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "sorting-dev-getAllProjects",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "postProject": {
        "handler": "handler.postProject",
        "events": [
          {
            "http": {
              "path": "projects/create",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "sorting-dev-postProject",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "getAllPeople": {
        "handler": "handler.getAllPeople",
        "events": [
          {
            "http": {
              "path": "people",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "sorting-dev-getAllPeople",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "getRoles": {
        "handler": "handler.getRoles",
        "events": [
          {
            "http": {
              "path": "roles",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "sorting-dev-getRoles",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "populatePeople": {
        "handler": "handler.populatePeople",
        "events": [
          {
            "http": {
              "path": "populatepeople",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "sorting-dev-populatePeople",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "projectRoles": {
        "handler": "handler.projectRoles",
        "events": [
          {
            "http": {
              "path": "projectroles",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "sorting-dev-projectRoles",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "inputStudents": {
        "handler": "handler.inputStudents",
        "events": [
          {
            "http": {
              "path": "inputstudents",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "sorting-dev-inputStudents",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs10.x",
        "vpc": {}
      }
    },
    "serviceFilename": "serverless.yml",
    "layers": {},
    "artifact": "/Users/yorkcook/Desktop/labby-be/Sorting/.serverless/sorting.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/sorting/dev/1571074276899-2019-10-14T17:31:16.899Z",
    "artifact": "sorting.zip"
  }
}